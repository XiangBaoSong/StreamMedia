架构成服务器客户端模型（一对多）

客户端：采用mvc设计模式
1、采集视频
a、预览视频；
b、采集图片；
c、采集视频；
d、添加字幕；

2、播放视频：自动扫描本地所有视频文件，然后用directshow开始播放音视频；
a、采集一张图片；
b、添加字幕；

3、接收网络音视频并实时预览；
a、可以随意截取一张图片；
b、实时保存视频数据；
c、添加字幕；
d、人脸识别；

4、可以管理视频参数：
a、选择视频源；
b、调整亮度、对比度、饱和度、色度、上下左右镜像；
c、选择视频标准；
d、如果是网络摄像头可以控制摄像头运动；

5、图片采用YUV、JPG压缩，也可以打开这种格式的图片；

6、视频可以选择保存格式：YUV、JPG、MJPG、MP4、H264、H265

7、视频可以选择网络传输格式YUV、JPG、MJPG、MP4、H264、H265

8、连接到网络，然后可以查看到公开的其他客户端ip，账户名

9、选择一个客户端，然后可以用文字聊天；

10、可以请求对方开启视频直播、或者视频通话，如果是摄像头和采集卡可以要求控制对方
采集参数；当然不是采集卡也可以控制播放参数；

11.视频暂停/停止

12、断开与客户端之间的连接；

13、断开与服务器的连接；

服务器：
1、配置管理界面
a、可以查看当前连接信息（ip地址、连接时间、传输数据量、正在执行的动作）
b、断开连接
c、发送服务器消息；
d、群发消息
e、双击观看视频；

2、通信层动态库
a、开启、停止、重启服务器；
b、支持多用户连接；
b、消息队列；
c、文字信息采用TCP通信；
d、视频流采用http+UDP传输方式；

3、数据层管理动态库
a、用户信息管理；
b、文件信息管理；
c、缓存3天的视频文件；
d、缓存7天文字消息；
e、缓存7天错误日志；
